generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @default(uuid())

  username String
  password String

  role String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id String @id @default(uuid())

  competitors Competitor[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Competitor {
  id String @id @default(uuid())

  year  Int // évfolyam
  class String // osztály

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  attempts Attempt[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Competition {
  id String @id @default(uuid())

  name        String
  description String

  year Int // évfolyam

  StartDate DateTime
  EndDate   DateTime

  questions Question[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id String @id @default(uuid())

  question String
  // syntax: word1 word2 word3 funxsd4e 6 
  // (3 szó, 4. scrambled, utolsó szám évfolyam)

  answer String

  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId String

  attempts Attempt[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attempt {
  id String @id @default(uuid())

  competitor   Competitor @relation(fields: [competitorId], references: [id])
  competitorId String

  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  isCorrect Boolean
  TimeTaken Int

  answer String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
